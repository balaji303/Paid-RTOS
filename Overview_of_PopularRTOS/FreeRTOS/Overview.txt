-> FreeRTOS is a most  popular RTOS out there in the market

-> Pre-emptive scheduling

-> Inter-thread communications

-> Thread Synchronization

-> Hooks

-> Trace recording

-> Run-time statistics gathering

-> Tick-less capablity

Common files found in FreeRTOS are as follows
	-> queue.c
	-> timers.c
	-> event_group.c
	-> croutine.c
	-> FreeRTOSConfig.h

FreeRTOS variable Names
	-> 'c' int8_t (char)
	-> 's' int16_t (short)
	-> 'l' int32_t (long)
	-> 'b' BaseType_t

	Example 
		uint8_t : uc
		pointer to char : pc

Task Management
	-> void TaskFunction(void *pvParameter); 
	->  argument: pointer to void

Task creation

	-> BaseType_t xTaskCreate( TaskFunction_t pvTaskCode,
const char * const pcName,
uint16_t usStackDepth,
void *pvParameters,
UBaseType_t uxPriority,
TaskHandle_t *pxCreatedTask
);